syntax = "proto3";

package escrow;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/iov-one/weave/coin/codec.proto";

// Escrow holds some coins.
// The arbiter or sender can release them to the recipient.
// The recipient can return them to the sender.
// Upon timeout, they will be returned to the sender.
//
// Note that if the arbiter is a Hashlock permission, we have
// an HTLC ;)
message Escrow {
  bytes sender = 1 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes arbiter = 2 [(gogoproto.casttype) = "github.com/iov-one/weave.Condition"];
  bytes recipient = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];

  // If unreleased before timeout, escrow will return to sender.
  // Timeout represents wall clock time as read from the block header. Timeout
  // is represented using POSIX time format.
  // Expiration time is inclusive meaning that the escrow expires as soon as
  // the current time is equal or greater than timeout value.
  // nonexpired: [created, timeout)
  // expired: [timeout, infinity)
  int64 timeout = 5 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];

  // max length 128 character
  string memo = 6;
}

// CreateEscrowMsg is a request to create an Escrow with some tokens.
// If sender is not defined, it defaults to the first signer
// The rest must be defined
message CreateEscrowMsg {
  bytes src = 1 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes arbiter = 2 [(gogoproto.casttype) = "github.com/iov-one/weave.Condition"];
  bytes recipient = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  // amount may contain multiple token types
  repeated coin.Coin amount = 4;
  // Timeout represents wall clock time.
  int64 timeout = 5 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];
  // max length 128 character
  string memo = 6;
}

// ReleaseEscrowMsg releases the content to the recipient.
// Must be authorized by sender or arbiter.
// If amount not provided, defaults to entire escrow,
// May be a subset of the current balance.
message ReleaseEscrowMsg {
  bytes escrow_id = 1;
  repeated coin.Coin amount = 2;
}

// ReturnEscrowMsg returns the content to the sender.
// Must be authorized by the sender or an expired timeout
message ReturnEscrowMsg {
  bytes escrow_id = 1;
}

// UpdateEscrowPartiesMsg changes any of the parties of the escrow:
// sender, arbiter, recipient. This must be authorized by the current
// holder of that position (eg. only sender can update sender).
//
// Represents delegating responsibility
message UpdateEscrowPartiesMsg {
  bytes escrow_id = 1;
  bytes sender = 2 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes arbiter = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Condition"];
  bytes recipient = 4 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
}
